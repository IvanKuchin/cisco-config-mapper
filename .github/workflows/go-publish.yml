# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Publish release assets

on:
  release:
    types: ['published']

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      # write permission is required to create a github release
      contents: write
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.20.x

    - name: Mod tidy
      run: go mod tidy

    - name: Linux build
      run: |
        go build -o cmd/cisco-config-mapper .
        cd ./cmd
        tar -czf cisco-config-mapper-linux-${{ github.event.release.tag_name }}.tar.gz ./cisco-config-mapper
        rm ./cisco-config-mapper

    - name: Windows build
      run: |
        GOOS=windows GOARCH=amd64 go build -o cmd/cisco-config-mapper.exe .
        cd ./cmd
        zip cisco-config-mapper-windows-${{ github.event.release.tag_name }}.zip ./cisco-config-mapper.exe
        rm ./cisco-config-mapper.exe

    - name: Darwin build
      run: |
        GOOS=darwin GOARCH=amd64 go build -o cmd/cisco-config-mapper .
        cd ./cmd
        tar -czf cisco-config-mapper-darwin-${{ github.event.release.tag_name }}.tar.gz ./cisco-config-mapper
        rm ./cisco-config-mapper

    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          cmd/cisco-config-mapper-darwin-${{ github.event.release.tag_name }}.tar.gz
          cmd/cisco-config-mapper-linux-${{ github.event.release.tag_name }}.tar.gz
          cmd/cisco-config-mapper-windows-${{ github.event.release.tag_name }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload linux artifact
      uses: actions/upload-artifact@v3
      with:
        name: cisco-config-mapper-linux-${{ github.event.release.tag_name }}.tar.gz
        path: cmd/cisco-config-mapper-linux-${{ github.event.release.tag_name }}.tar.gz

    - name: Upload windows artifact
      uses: actions/upload-artifact@v3
      with:
        name: cisco-config-mapper-windows-${{ github.event.release.tag_name }}.zip
        path: cmd/cisco-config-mapper-windows-${{ github.event.release.tag_name }}.tar.gz





